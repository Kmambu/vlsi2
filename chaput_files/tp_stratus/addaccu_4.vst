
-- =======================================================================
-- Coriolis Structural VHDL Driver
-- Generated on Dec 11, 2018, 16:27
-- 
-- To be interoperable with Alliance, it uses it's special VHDL subset.
-- ("man vhdl" under Alliance for more informations)
-- =======================================================================

entity addaccu_4 is
  port ( ck  : in bit
       ; sel : in bit
       ; a   : in bit_vector(3 downto 0)
       ; b   : in bit_vector(3 downto 0)
       ; s   : out bit_vector(3 downto 0)
       ; vdd : in bit
       ; vss : in bit
       );
end addaccu_4;

architecture structural of addaccu_4 is

  component adder_4
    port ( cin  : in bit
         ; i0   : in bit_vector(3 downto 0)
         ; i1   : in bit_vector(3 downto 0)
         ; cout : out bit
         ; q    : out bit_vector(3 downto 0)
         ; vdd  : in bit
         ; vss  : in bit
         );
  end component;

  component reg_4
    port ( ck  : in bit
         ; d   : in bit_vector(3 downto 0)
         ; q   : out bit_vector(3 downto 0)
         ; vdd : in bit
         ; vss : in bit
         );
  end component;

  component mux_4
    port ( cmd : in bit
         ; i0  : in bit_vector(3 downto 0)
         ; i1  : in bit_vector(3 downto 0)
         ; s   : out bit_vector(3 downto 0)
         ; vdd : in bit
         ; vss : in bit
         );
  end component;

  signal alu_cout  :  bit;
  signal adder_reg :  bit_vector(3 downto 0);
  signal mux_adder :  bit_vector(3 downto 0);


begin

  mux_4_i2 : mux_4
  port map ( cmd => sel
           , i0  => s(3 downto 0)
           , i1  => a(3 downto 0)
           , s   => mux_adder(3 downto 0)
           , vdd => vdd
           , vss => vss
           );

  reg_4_i1 : reg_4
  port map ( ck  => ck
           , d   => adder_reg(3 downto 0)
           , q   => s(3 downto 0)
           , vdd => vdd
           , vss => vss
           );

  adder_4_i0 : adder_4
  port map ( cin  => vss
           , i0   => mux_adder(3 downto 0)
           , i1   => b(3 downto 0)
           , cout => alu_cout
           , q    => adder_reg(3 downto 0)
           , vdd  => vdd
           , vss  => vss
           );

end structural;

