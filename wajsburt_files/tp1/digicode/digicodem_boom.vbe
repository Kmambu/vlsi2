-- VHDL data flow description generated from `digicodem_boom`
--		date : Wed Jan 23 15:54:04 2019


-- Entity Declaration

ENTITY digicodem_boom IS
  PORT (
  ck : in BIT;	-- ck
  vdd : in BIT;	-- vdd
  vss : in BIT;	-- vss
  reset : in BIT;	-- reset
  jour : in BIT;	-- jour
  o : in BIT;	-- o
  kbd : in BIT;	-- kbd
  i : in bit_vector(3 DOWNTO 0) ;	-- i
  porte : out BIT;	-- porte
  alarm : out BIT	-- alarm
  );
END digicodem_boom;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF digicodem_boom IS
  SIGNAL circuit_ep : REG_VECTOR(2 DOWNTO 0) REGISTER;	-- circuit_ep
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux11 : BIT;		-- aux11
  SIGNAL aux12 : BIT;		-- aux12

BEGIN
  aux12 <= (circuit_ep(0) AND NOT(i(3)));
  aux11 <= (i(1) AND (NOT(i(0)) AND (NOT(i(2)) AND (NOT(
circuit_ep(0)) AND i(3)))));
  aux7 <= NOT(NOT(circuit_ep(2)) AND NOT(circuit_ep(0)));
  aux6 <= ((aux4 AND circuit_ep(0)) AND NOT(o));
  aux4 <= NOT(NOT(aux1) OR NOT(jour));
  aux3 <= ((kbd AND NOT(circuit_ep(1))) AND circuit_ep(2));
  aux1 <= (NOT(circuit_ep(1)) AND circuit_ep(2));
  aux0 <= (circuit_ep(1) AND NOT(circuit_ep(2)));
  label0 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    circuit_ep (0) <= GUARDED (aux6 OR (NOT(kbd) AND NOT(aux4) AND 
circuit_ep(0)) OR aux0 OR reset OR (aux3 AND aux11) OR (aux1 
AND NOT(i(1)) AND i(0) AND NOT(jour) AND i(2) AND 
aux12));
  END BLOCK label0;
  label1 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    circuit_ep (1) <= GUARDED ((aux1 AND NOT(reset) AND jour AND circuit_ep(0) 
AND o) OR (aux7 AND NOT(kbd) AND circuit_ep(1) AND 
NOT(reset)) OR (aux3 AND NOT(reset) AND aux11) OR ((
(circuit_ep(1) AND NOT(reset) AND NOT(i(1)) AND 
i(0) AND NOT(i(2)) AND circuit_ep(0)) OR (
circuit_ep(1) AND circuit_ep(2) AND NOT(reset) AND i(1) AND 
i(0) AND i(2) AND NOT(circuit_ep(0)))) AND NOT(i(3)))
);
  END BLOCK label1;
  label2 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    circuit_ep (2) <= GUARDED (aux6 OR (NOT(kbd) AND circuit_ep(2) AND (NOT(
jour) OR NOT(circuit_ep(0)))) OR ((NOT(kbd) OR NOT(
circuit_ep(2))) AND circuit_ep(1)) OR reset OR (aux1 AND aux11
) OR ((circuit_ep(2) OR i(1) OR jour) AND ((kbd 
AND NOT(circuit_ep(2)) AND i(1)) OR (circuit_ep(1) 
AND NOT(i(1)))) AND i(0) AND NOT(i(2)) AND aux12));
  END BLOCK label2;

alarm <= (NOT(circuit_ep(1)) AND NOT(aux7));

porte <= aux0;
END;
