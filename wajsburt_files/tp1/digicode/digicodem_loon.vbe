-- VHDL data flow description generated from `digicodem_loon`
--		date : Wed Jan 23 15:54:04 2019


-- Entity Declaration

ENTITY digicodem_loon IS
  PORT (
  alarm : out BIT;	-- alarm
  porte : out BIT;	-- porte
  i : in bit_vector(3 DOWNTO 0) ;	-- i
  kbd : in BIT;	-- kbd
  o : in BIT;	-- o
  jour : in BIT;	-- jour
  reset : in BIT;	-- reset
  vss : in BIT;	-- vss
  vdd : in BIT;	-- vdd
  ck : in BIT	-- ck
  );
END digicodem_loon;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF digicodem_loon IS
  SIGNAL circuit_ep : REG_VECTOR(2 DOWNTO 0) REGISTER;	-- circuit_ep
  SIGNAL not_aux7 : BIT;		-- not_aux7
  SIGNAL not_aux12 : BIT;		-- not_aux12
  SIGNAL a4_x2_sig : BIT;		-- a4_x2_sig
  SIGNAL not_aux11 : BIT;		-- not_aux11
  SIGNAL not_aux3 : BIT;		-- not_aux3
  SIGNAL no2_x1_sig : BIT;		-- no2_x1_sig
  SIGNAL not_aux6 : BIT;		-- not_aux6
  SIGNAL not_circuit_ep : BIT_VECTOR(2 DOWNTO 0);	-- not_circuit_ep
  SIGNAL not_aux4 : BIT;		-- not_aux4
  SIGNAL not_aux1 : BIT;		-- not_aux1
  SIGNAL not_jour : BIT;		-- not_jour
  SIGNAL not_kbd : BIT;		-- not_kbd
  SIGNAL not_i : BIT_VECTOR(2 DOWNTO 0);	-- not_i
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL an12_x1_sig : BIT;		-- an12_x1_sig
  SIGNAL na2_x1_sig : BIT;		-- na2_x1_sig
  SIGNAL on12_x1_sig : BIT;		-- on12_x1_sig
  SIGNAL inv_x2_sig : BIT;		-- inv_x2_sig
  SIGNAL ao22_x2_sig : BIT;		-- ao22_x2_sig
  SIGNAL na3_x1_sig : BIT;		-- na3_x1_sig
  SIGNAL o4_x2_sig : BIT;		-- o4_x2_sig
  SIGNAL na4_x1_sig : BIT;		-- na4_x1_sig
  SIGNAL inv_x2_2_sig : BIT;		-- inv_x2_2_sig
  SIGNAL no4_x1_sig : BIT;		-- no4_x1_sig
  SIGNAL na2_x1_2_sig : BIT;		-- na2_x1_2_sig
  SIGNAL no3_x1_sig : BIT;		-- no3_x1_sig
  SIGNAL na2_x1_3_sig : BIT;		-- na2_x1_3_sig
  SIGNAL o3_x2_sig : BIT;		-- o3_x2_sig
  SIGNAL a3_x2_sig : BIT;		-- a3_x2_sig
  SIGNAL no4_x1_2_sig : BIT;		-- no4_x1_2_sig
  SIGNAL na3_x1_2_sig : BIT;		-- na3_x1_2_sig
  SIGNAL no4_x1_3_sig : BIT;		-- no4_x1_3_sig
  SIGNAL na4_x1_2_sig : BIT;		-- na4_x1_2_sig
  SIGNAL a2_x2_sig : BIT;		-- a2_x2_sig
  SIGNAL nao22_x1_sig : BIT;		-- nao22_x1_sig
  SIGNAL a2_x2_2_sig : BIT;		-- a2_x2_2_sig
  SIGNAL oa2a22_x2_sig : BIT;		-- oa2a22_x2_sig
  SIGNAL o2_x2_sig : BIT;		-- o2_x2_sig
  SIGNAL on12_x1_2_sig : BIT;		-- on12_x1_2_sig
  SIGNAL no3_x1_2_sig : BIT;		-- no3_x1_2_sig
  SIGNAL na3_x1_4_sig : BIT;		-- na3_x1_4_sig
  SIGNAL o2_x2_2_sig : BIT;		-- o2_x2_2_sig
  SIGNAL inv_x2_3_sig : BIT;		-- inv_x2_3_sig
  SIGNAL na3_x1_5_sig : BIT;		-- na3_x1_5_sig
  SIGNAL na2_x1_4_sig : BIT;		-- na2_x1_4_sig
  SIGNAL noa22_x1_sig : BIT;		-- noa22_x1_sig
  SIGNAL na2_x1_5_sig : BIT;		-- na2_x1_5_sig
  SIGNAL na3_x1_6_sig : BIT;		-- na3_x1_6_sig
  SIGNAL na3_x1_3_sig : BIT;		-- na3_x1_3_sig
  SIGNAL mbk_buf_circuit_ep : BIT_VECTOR(2 DOWNTO 2);	-- mbk_buf_circuit_ep
  SIGNAL mbk_buf_not_circuit_ep : BIT_VECTOR(2 DOWNTO 2);	-- mbk_buf_not_circuit_ep

BEGIN
  mbk_buf_not_circuit_ep (2) <= not_circuit_ep(2);
  mbk_buf_circuit_ep (2) <= circuit_ep(2);
  na3_x1_3_sig <= NOT(((noa22_x1_sig AND na3_x1_6_sig) AND 
na3_x1_4_sig));
  na3_x1_6_sig <= NOT(((not_kbd AND mbk_buf_circuit_ep(2)) AND 
na2_x1_5_sig));
  na2_x1_5_sig <= NOT((jour AND circuit_ep(0)));
  noa22_x1_sig <= NOT(((na2_x1_4_sig AND circuit_ep(1)) OR 
na3_x1_5_sig));
  na2_x1_4_sig <= NOT((kbd AND mbk_buf_circuit_ep(2)));
  na3_x1_5_sig <= NOT(((not_aux6 AND inv_x2_3_sig) AND o2_x2_2_sig)
);
  inv_x2_3_sig <= NOT(reset);
  o2_x2_2_sig <= (not_aux11 OR not_aux1);
  na3_x1_4_sig <= NOT(((no3_x1_2_sig AND on12_x1_2_sig) AND 
oa2a22_x2_sig));
  no3_x1_2_sig <= NOT(((not_i(0) OR not_aux12) OR i(2)));
  on12_x1_2_sig <= (NOT(mbk_buf_not_circuit_ep(2)) OR o2_x2_sig);
  o2_x2_sig <= (jour OR i(1));
  oa2a22_x2_sig <= ((a2_x2_2_sig AND mbk_buf_not_circuit_ep(2)) OR (
circuit_ep(1) AND not_i(1)));
  a2_x2_2_sig <= (i(1) AND kbd);
  nao22_x1_sig <= NOT(((i(3) OR a2_x2_sig) AND a3_x2_sig));
  a2_x2_sig <= (na4_x1_2_sig AND na3_x1_2_sig);
  na4_x1_2_sig <= NOT((((mbk_buf_circuit_ep(2) AND no4_x1_3_sig) 
AND circuit_ep(1)) AND not_circuit_ep(0)));
  no4_x1_3_sig <= NOT((((not_i(1) OR not_i(0)) OR reset) OR 
not_i(2)));
  na3_x1_2_sig <= NOT(((no4_x1_2_sig AND circuit_ep(1)) AND 
circuit_ep(0)));
  no4_x1_2_sig <= NOT((((i(1) OR not_i(0)) OR reset) OR i(2)));
  a3_x2_sig <= ((o3_x2_sig AND na2_x1_3_sig) AND na2_x1_2_sig);
  o3_x2_sig <= ((not_aux11 OR reset) OR not_aux3);
  na2_x1_3_sig <= NOT((no3_x1_sig AND circuit_ep(1)));
  no3_x1_sig <= NOT(((reset OR not_aux7) OR kbd));
  na2_x1_2_sig <= NOT((no4_x1_sig AND circuit_ep(0)));
  no4_x1_sig <= NOT((((reset OR inv_x2_2_sig) OR not_aux1) OR 
not_jour));
  inv_x2_2_sig <= NOT(o);
  na4_x1_sig <= NOT((((o4_x2_sig AND ao22_x2_sig) AND on12_x1_sig
) AND an12_x1_sig));
  o4_x2_sig <= (((not_aux12 OR i(1)) OR not_aux1) OR na3_x1_sig);
  na3_x1_sig <= NOT(((i(2) AND i(0)) AND not_jour));
  ao22_x2_sig <= ((not_aux3 OR not_aux11) AND inv_x2_sig);
  inv_x2_sig <= NOT(reset);
  on12_x1_sig <= (NOT(circuit_ep(0)) OR na2_x1_sig);
  na2_x1_sig <= NOT((not_aux4 AND not_kbd));
  an12_x1_sig <= (NOT(aux0) AND not_aux6);
  aux0 <= NOT((mbk_buf_circuit_ep(2) OR not_circuit_ep(1)));
  not_i (0) <= NOT(i(0));
  not_i (1) <= NOT(i(1));
  not_i (2) <= NOT(i(2));
  not_kbd <= NOT(kbd);
  not_jour <= NOT(jour);
  not_aux1 <= (circuit_ep(1) OR not_circuit_ep(2));
  not_aux4 <= (not_jour OR not_aux1);
  not_circuit_ep (0) <= NOT(circuit_ep(0));
  not_circuit_ep (1) <= NOT(circuit_ep(1));
  not_circuit_ep (2) <= NOT(circuit_ep(2));
  not_aux6 <= (NOT(no2_x1_sig) OR not_circuit_ep(0));
  no2_x1_sig <= NOT((o OR not_aux4));
  not_aux3 <= ((not_kbd OR circuit_ep(1)) OR 
mbk_buf_not_circuit_ep(2));
  not_aux11 <= (NOT(a4_x2_sig) OR circuit_ep(0));
  a4_x2_sig <= (((not_i(0) AND not_i(2)) AND i(3)) AND i(1));
  not_aux12 <= (i(3) OR not_circuit_ep(0));
  not_aux7 <= (mbk_buf_not_circuit_ep(2) AND not_circuit_ep(0));
  label0 : BLOCK (NOT(((ck AND NOT((ck'STABLE))) XOR '1')) = '1')
  BEGIN
    circuit_ep (0) <= GUARDED na4_x1_sig;
  END BLOCK label0;
  label1 : BLOCK (NOT(((ck AND NOT((ck'STABLE))) XOR '1')) = '1')
  BEGIN
    circuit_ep (1) <= GUARDED nao22_x1_sig;
  END BLOCK label1;
  label2 : BLOCK (NOT(((ck AND NOT((ck'STABLE))) XOR '1')) = '1')
  BEGIN
    circuit_ep (2) <= GUARDED na3_x1_3_sig;
  END BLOCK label2;

alarm <= (not_aux7 AND not_circuit_ep(1));

porte <= aux0;
END;
