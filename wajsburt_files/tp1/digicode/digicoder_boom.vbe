-- VHDL data flow description generated from `digicoder_boom`
--		date : Wed Jan 23 15:54:05 2019


-- Entity Declaration

ENTITY digicoder_boom IS
  PORT (
  ck : in BIT;	-- ck
  vdd : in BIT;	-- vdd
  vss : in BIT;	-- vss
  reset : in BIT;	-- reset
  jour : in BIT;	-- jour
  o : in BIT;	-- o
  kbd : in BIT;	-- kbd
  i : in bit_vector(3 DOWNTO 0) ;	-- i
  porte : out BIT;	-- porte
  alarm : out BIT	-- alarm
  );
END digicoder_boom;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF digicoder_boom IS
  SIGNAL circuit_ep : REG_VECTOR(2 DOWNTO 0) REGISTER;	-- circuit_ep
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux9 : BIT;		-- aux9
  SIGNAL aux11 : BIT;		-- aux11
  SIGNAL aux13 : BIT;		-- aux13

BEGIN
  aux13 <= ((jour AND circuit_ep(0)) OR NOT(kbd));
  aux11 <= ((i(0) AND i(2)) AND NOT(i(3)));
  aux9 <= (NOT(jour) OR NOT(o));
  aux8 <= (circuit_ep(0) AND NOT(kbd));
  aux7 <= (aux6 AND NOT(circuit_ep(1)));
  aux6 <= ((aux4 AND NOT(circuit_ep(0))) AND kbd);
  aux4 <= ((i(0) AND NOT(i(2))) AND NOT(i(3)));
  aux2 <= NOT(NOT(circuit_ep(0)) OR NOT(kbd));
  aux1 <= (aux0 AND NOT(circuit_ep(2)));
  aux0 <= (NOT(circuit_ep(0)) AND circuit_ep(1));
  label0 : BLOCK ((NOT((ck'STABLE)) AND ck) = '1')
  BEGIN
    circuit_ep (0) <= GUARDED ((aux6 AND circuit_ep(1) AND i(1)) OR (aux8 AND 
NOT(circuit_ep(1))) OR (aux9 AND aux8) OR reset OR (
((aux7 AND NOT(i(1))) OR (jour AND NOT(o) AND 
circuit_ep(0) AND kbd AND circuit_ep(1))) AND circuit_ep(2)) 
OR (NOT(aux2) AND circuit_ep(1) AND NOT(
circuit_ep(2))));
  END BLOCK label0;
  label1 : BLOCK ((NOT((ck'STABLE)) AND ck) = '1')
  BEGIN
    circuit_ep (1) <= GUARDED ((((((aux11 AND circuit_ep(0) AND circuit_ep(1)) 
OR aux7) AND NOT(i(1))) OR (aux13 AND circuit_ep(1)
) OR reset) AND circuit_ep(2)) OR ((((aux2 OR 
circuit_ep(1)) AND aux11 AND i(1)) OR aux0 OR reset OR aux8) 
AND NOT(circuit_ep(2))));
  END BLOCK label1;
  label2 : BLOCK ((NOT((ck'STABLE)) AND ck) = '1')
  BEGIN
    circuit_ep (2) <= GUARDED (((reset OR NOT(kbd) OR i(1)) AND (reset OR ((
aux4 OR NOT(kbd)) AND NOT(circuit_ep(0)) AND 
circuit_ep(1)) OR (((NOT(i(0)) AND NOT(i(2)) AND i(3)) OR NOT(
kbd)) AND circuit_ep(0) AND NOT(circuit_ep(1))))) OR
 (((i(0) AND aux9 AND i(2) AND NOT(i(3)) AND 
circuit_ep(0) AND kbd AND circuit_ep(1) AND NOT(i(1))) OR (
aux13 AND aux9 AND circuit_ep(1)) OR (NOT(kbd) AND NOT
(circuit_ep(1)))) AND circuit_ep(2)) OR aux1);
  END BLOCK label2;

alarm <= (NOT(circuit_ep(1)) AND NOT(circuit_ep(2)));

porte <= aux1;
END;
