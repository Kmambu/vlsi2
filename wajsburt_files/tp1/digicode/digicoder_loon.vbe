-- VHDL data flow description generated from `digicoder_loon`
--		date : Wed Jan 23 15:54:05 2019


-- Entity Declaration

ENTITY digicoder_loon IS
  PORT (
  alarm : out BIT;	-- alarm
  porte : out BIT;	-- porte
  i : in bit_vector(3 DOWNTO 0) ;	-- i
  kbd : in BIT;	-- kbd
  o : in BIT;	-- o
  jour : in BIT;	-- jour
  reset : in BIT;	-- reset
  vss : in BIT;	-- vss
  vdd : in BIT;	-- vdd
  ck : in BIT	-- ck
  );
END digicoder_loon;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF digicoder_loon IS
  SIGNAL circuit_ep : REG_VECTOR(2 DOWNTO 0) REGISTER;	-- circuit_ep
  SIGNAL not_aux0 : BIT;		-- not_aux0
  SIGNAL not_aux13 : BIT;		-- not_aux13
  SIGNAL not_aux2 : BIT;		-- not_aux2
  SIGNAL not_circuit_ep : BIT_VECTOR(2 DOWNTO 1);	-- not_circuit_ep
  SIGNAL not_aux7 : BIT;		-- not_aux7
  SIGNAL not_aux9 : BIT;		-- not_aux9
  SIGNAL not_aux8 : BIT;		-- not_aux8
  SIGNAL no2_x1_sig : BIT;		-- no2_x1_sig
  SIGNAL not_aux6 : BIT;		-- not_aux6
  SIGNAL not_aux4 : BIT;		-- not_aux4
  SIGNAL not_reset : BIT;		-- not_reset
  SIGNAL not_kbd : BIT;		-- not_kbd
  SIGNAL not_i : BIT_VECTOR(2 DOWNTO 0);	-- not_i
  SIGNAL aux11 : BIT;		-- aux11
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL o2_x2_sig : BIT;		-- o2_x2_sig
  SIGNAL no2_x1_2_sig : BIT;		-- no2_x1_2_sig
  SIGNAL na2_x1_sig : BIT;		-- na2_x1_sig
  SIGNAL ao22_x2_sig : BIT;		-- ao22_x2_sig
  SIGNAL a3_x2_sig : BIT;		-- a3_x2_sig
  SIGNAL inv_x2_sig : BIT;		-- inv_x2_sig
  SIGNAL no3_x1_sig : BIT;		-- no3_x1_sig
  SIGNAL a3_x2_2_sig : BIT;		-- a3_x2_2_sig
  SIGNAL no2_x1_3_sig : BIT;		-- no2_x1_3_sig
  SIGNAL nao22_x1_sig : BIT;		-- nao22_x1_sig
  SIGNAL na3_x1_2_sig : BIT;		-- na3_x1_2_sig
  SIGNAL na3_x1_sig : BIT;		-- na3_x1_sig
  SIGNAL nao22_x1_2_sig : BIT;		-- nao22_x1_2_sig
  SIGNAL na3_x1_3_sig : BIT;		-- na3_x1_3_sig
  SIGNAL na2_x1_2_sig : BIT;		-- na2_x1_2_sig
  SIGNAL oa22_x2_sig : BIT;		-- oa22_x2_sig
  SIGNAL a3_x2_3_sig : BIT;		-- a3_x2_3_sig
  SIGNAL a2_x2_sig : BIT;		-- a2_x2_sig
  SIGNAL on12_x1_sig : BIT;		-- on12_x1_sig
  SIGNAL nao22_x1_3_sig : BIT;		-- nao22_x1_3_sig
  SIGNAL na3_x1_4_sig : BIT;		-- na3_x1_4_sig
  SIGNAL na3_x1_7_sig : BIT;		-- na3_x1_7_sig
  SIGNAL na2_x1_3_sig : BIT;		-- na2_x1_3_sig
  SIGNAL na3_x1_6_sig : BIT;		-- na3_x1_6_sig
  SIGNAL inv_x2_2_sig : BIT;		-- inv_x2_2_sig
  SIGNAL na2_x1_4_sig : BIT;		-- na2_x1_4_sig
  SIGNAL na3_x1_8_sig : BIT;		-- na3_x1_8_sig
  SIGNAL na3_x1_5_sig : BIT;		-- na3_x1_5_sig
  SIGNAL a2_x2_2_sig : BIT;		-- a2_x2_2_sig
  SIGNAL na2_x1_5_sig : BIT;		-- na2_x1_5_sig
  SIGNAL no2_x1_4_sig : BIT;		-- no2_x1_4_sig
  SIGNAL no4_x1_sig : BIT;		-- no4_x1_sig
  SIGNAL na4_x1_sig : BIT;		-- na4_x1_sig
  SIGNAL no2_x1_5_sig : BIT;		-- no2_x1_5_sig
  SIGNAL na2_x1_6_sig : BIT;		-- na2_x1_6_sig
  SIGNAL na3_x1_9_sig : BIT;		-- na3_x1_9_sig
  SIGNAL a2_x2_3_sig : BIT;		-- a2_x2_3_sig
  SIGNAL o3_x2_sig : BIT;		-- o3_x2_sig
  SIGNAL mbk_buf_not_aux13 : BIT;		-- mbk_buf_not_aux13

BEGIN
  mbk_buf_not_aux13 <= not_aux13;
  o3_x2_sig <= ((aux1 OR a2_x2_2_sig) OR a2_x2_3_sig);
  a2_x2_3_sig <= (na3_x1_9_sig AND circuit_ep(2));
  na3_x1_9_sig <= NOT(((na2_x1_6_sig AND na4_x1_sig) AND 
na2_x1_5_sig));
  na2_x1_6_sig <= NOT((circuit_ep(1) AND no2_x1_5_sig));
  no2_x1_5_sig <= NOT((not_aux9 OR not_aux13));
  na4_x1_sig <= NOT((((no4_x1_sig AND no2_x1_4_sig) AND 
circuit_ep(0)) AND circuit_ep(1)));
  no4_x1_sig <= NOT((((not_i(2) OR i(1)) OR not_kbd) OR not_i(0))
);
  no2_x1_4_sig <= NOT((i(3) OR not_aux9));
  na2_x1_5_sig <= NOT((not_kbd AND not_circuit_ep(1)));
  a2_x2_2_sig <= (na3_x1_5_sig AND na3_x1_4_sig);
  na3_x1_5_sig <= NOT(((not_reset AND na3_x1_8_sig) AND 
na3_x1_6_sig));
  na3_x1_8_sig <= NOT(((na2_x1_4_sig AND circuit_ep(1)) AND 
inv_x2_2_sig));
  na2_x1_4_sig <= NOT((kbd AND not_aux4));
  inv_x2_2_sig <= NOT(circuit_ep(0));
  na3_x1_6_sig <= NOT(((na2_x1_3_sig AND circuit_ep(0)) AND 
not_circuit_ep(1)));
  na2_x1_3_sig <= NOT((kbd AND na3_x1_7_sig));
  na3_x1_7_sig <= NOT(((not_i(2) AND i(3)) AND not_i(0)));
  na3_x1_4_sig <= NOT(((not_i(1) AND kbd) AND not_reset));
  nao22_x1_3_sig <= NOT(((on12_x1_sig OR a2_x2_sig) AND a3_x2_3_sig));
  on12_x1_sig <= (NOT(aux11) OR not_i(1));
  a2_x2_sig <= (not_aux2 AND not_circuit_ep(1));
  a3_x2_3_sig <= ((not_aux8 AND not_reset) AND not_aux0);
  oa22_x2_sig <= ((na2_x1_2_sig AND not_i(1)) OR nao22_x1_2_sig);
  na2_x1_2_sig <= NOT((not_aux7 AND na3_x1_3_sig));
  na3_x1_3_sig <= NOT(((aux11 AND circuit_ep(0)) AND circuit_ep(1))
);
  nao22_x1_2_sig <= NOT(((mbk_buf_not_aux13 OR not_circuit_ep(1)) AND
 not_reset));
  na3_x1_sig <= NOT(((na3_x1_2_sig AND nao22_x1_sig) AND 
a3_x2_sig));
  na3_x1_2_sig <= NOT(((not_aux2 AND circuit_ep(1)) AND 
not_circuit_ep(2)));
  nao22_x1_sig <= NOT(((no2_x1_3_sig OR a3_x2_2_sig) AND 
circuit_ep(2)));
  no2_x1_3_sig <= NOT((i(1) OR not_aux7));
  a3_x2_2_sig <= ((no3_x1_sig AND circuit_ep(0)) AND circuit_ep(1)
);
  no3_x1_sig <= NOT(((inv_x2_sig OR not_kbd) OR o));
  inv_x2_sig <= NOT(jour);
  a3_x2_sig <= ((ao22_x2_sig AND na2_x1_sig) AND o2_x2_sig);
  ao22_x2_sig <= ((not_aux8 OR not_aux9) AND not_reset);
  na2_x1_sig <= NOT((no2_x1_2_sig AND circuit_ep(1)));
  no2_x1_2_sig <= NOT((not_i(1) OR not_aux6));
  o2_x2_sig <= (not_aux8 OR circuit_ep(1));
  aux1 <= NOT((not_aux0 OR circuit_ep(2)));
  aux11 <= NOT(((not_i(0) OR i(3)) OR not_i(2)));
  not_i (0) <= NOT(i(0));
  not_i (1) <= NOT(i(1));
  not_i (2) <= NOT(i(2));
  not_kbd <= NOT(kbd);
  not_reset <= NOT(reset);
  not_aux4 <= ((i(2) OR i(3)) OR not_i(0));
  not_aux6 <= (NOT(no2_x1_sig) OR circuit_ep(0));
  no2_x1_sig <= NOT((not_aux4 OR not_kbd));
  not_aux8 <= NOT((not_kbd AND circuit_ep(0)));
  not_aux9 <= (o AND jour);
  not_aux7 <= (not_aux6 OR circuit_ep(1));
  not_circuit_ep (1) <= NOT(circuit_ep(1));
  not_circuit_ep (2) <= NOT(circuit_ep(2));
  not_aux2 <= NOT((kbd AND circuit_ep(0)));
  not_aux13 <= NOT(((circuit_ep(0) AND jour) OR not_kbd));
  not_aux0 <= (circuit_ep(0) OR not_circuit_ep(1));
  label0 : BLOCK (NOT(((ck AND NOT((ck'STABLE))) XOR '1')) = '1')
  BEGIN
    circuit_ep (0) <= GUARDED na3_x1_sig;
  END BLOCK label0;
  label1 : BLOCK (NOT(((ck AND NOT((ck'STABLE))) XOR '1')) = '1')
  BEGIN
    circuit_ep (1) <= GUARDED ((oa22_x2_sig AND circuit_ep(2)) OR (
nao22_x1_3_sig AND NOT(circuit_ep(2))));
  END BLOCK label1;
  label2 : BLOCK (NOT(((ck AND NOT((ck'STABLE))) XOR '1')) = '1')
  BEGIN
    circuit_ep (2) <= GUARDED o3_x2_sig;
  END BLOCK label2;

alarm <= NOT((circuit_ep(2) OR circuit_ep(1)));

porte <= aux1;
END;
